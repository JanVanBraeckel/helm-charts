{{- if eq .Values.vpn.provider "mullvad" }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "deluge.fullname" . }}-vpn-config
  labels:
    app: {{ template "deluge.fullname" . }}
    chart: {{ template "deluge.chart" . }}
    release: {{ .Release.Name | quote }}
    heritage: {{ .Release.Service | quote }}
data:
  client.ovpn: |-
    client
    dev tun
    resolv-retry infinite
    nobind
    persist-key
    persist-tun
    verb 3
    remote-cert-tls server
    ping 10
    ping-restart 60
    sndbuf 524288
    rcvbuf 524288
    cipher AES-256-CBC
    tls-cipher TLS-DHE-RSA-WITH-AES-256-GCM-SHA384:TLS-DHE-RSA-WITH-AES-256-CBC-SHA
    proto udp
    auth-user-pass
    ca /config/mullvad_ca.crt
    tun-ipv6
    script-security 2
    up /config/update-resolv-conf.sh
    down /config/update-resolv-conf.sh
    fast-io
    remote-random
    {{- range .Values.vpn.hosts }}
    remote {{ . }}
    {{- end }}
  update-resolv-conf.sh: |-
    #!/bin/bash
    [ -x /sbin/resolvconf ] || exit 0
    [ "$script_type" ] || exit 0
    [ "$dev" ] || exit 0

    split_into_parts()
    {
      part1="$1"
      part2="$2"
      part3="$3"
    }

    case "$script_type" in
      up)
      NMSRVRS=""
      SRCHS=""
      for optionvarname in ${!foreign_option_*} ; do
        option="${!optionvarname}"
        echo "$option"
        split_into_parts $option
        if [ "$part1" = "dhcp-option" ] ; then
          if [ "$part2" = "DNS" ] ; then
            NMSRVRS="${NMSRVRS:+$NMSRVRS }$part3"
          elif [ "$part2" = "DOMAIN" ] ; then
            SRCHS="${SRCHS:+$SRCHS }$part3"
          fi
        fi
      done
      R=""
      [ "$SRCHS" ] && R="search $SRCHS
    "
      for NS in $NMSRVRS ; do
              R="${R}nameserver $NS
    "
      done
      echo -n "$R" | /sbin/resolvconf -a "${dev}.openvpn"
      ;;
      down)
      /sbin/resolvconf -d "${dev}.openvpn"
      ;;
    esac
  mullvad_ca.crt: |-
{{ .Values.vpn.cert | indent 4 }}
{{- end }}
